1. Introduction
---------------
- Project structure
- Spring configuration
- Services

2. Issues
---------
- Generics, simple queries, pagination (no metadata), is new?, arbitrary queries
- Approach: step by step refactoring -> introduce Hades

3. CustomerRepository
---------------------
- add dependency to CustomerServiceImpl
- replace findById, findAll, save
- run test

4. Explain general proxy mechanism, GenericJpaDao
-------------------------------------------------
- show GenericDao interface
- readAll(Pageable pageble) -> replace findByLastname(Pageable pageable)

5. AccountRepository
--------------------
- replace saven(â€¦)
- findByCustomer
- explain proxy mechanism, methods signature possibilities (@Param, return types, Pageable, Sort)

6. First summary
----------------
- implementation got obsolete
- switch to after package

7. Custom implementation
------------------------
- copy interface and implementation (hint to visibility)
- adapt AccountDao
- copy test case
- explain implementation class lookup

8. JDBC implementation
-----------------------
- copy implementation -> configuration necessary
- copy XML
- run tests -> fail (shows that JDBc bean is used)
- fix SQL by adding FROM -> tests run again

9. Auditing (optional)
-----------------------
- show auditing test from Hades sample project

10. Summary
-----------
- CRUD, Queries, Pagination, Sorting,
- Custom implementation
- Domain base classes
- Eclipse plugin, Roo addon
- Roadmap, license